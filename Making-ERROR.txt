1. [fetch 오류]  Module parse failed: The top-level-await experiment is not enabled 
    (set experiments.topLevelAwait: true to enabled it)
    File was processed with these loaders:
    ...

    <원인>

        mongodb 연결 오류이다.

    <해결>

        npm mongodb 에서 "하란대로! 하자"
        "어줍잖게, async await 쓰면서" 헷갈리게 하지 말고 "하란대로 해라"

    <코드> [api-util.js]

                import { MongoClient } from "mongodb";

                export function ConnectMongodb() {
                    const client = new MongoClient(
                        "mongodb+srv://audtlr:비밀번호@cluster0.mzdaqy1.mongodb.net/?retryWrites=true&w=majority"
                    );
                        return client;
                }

                export async function insertUserInfo(client, dbName, collection, data) {
                    return client.db(dbName).collection(collection).insertOne(data);
                }
                ...

        [사용]

                import { ConnectMongodb, insertUserInfo } from "../../helper/db-util";

                    # const client = ConnectMongodb(); await 뺄거면 밖에다가

                async function userContact(req, res) {
                    const client = await ConnectMongodb();

                    if (req.method === "POST") {
                        const { email, name, content } = req.body;

                        const insertData = {
                            email,
                            name,
                            content,
                            };

                        const insertResult = await insertUserInfo(
                            client,
                            "BlogContact",
                            "userInfo",
                            insertData
                            );

        [사용2] - try catch 오류 코드 쓸거면 이게 더 낫겠다.

        
                async function userContact(req, res) {
                    let client;
                    try {
                    client = await ConnectMongodb();
                    } catch (error) {
                    res.status(500).json({ message: "connection fail" });
                    }

1. react 폴더 만들면
-   npm WARN deprecated tar@2.2.2: This version of tar is no longer supported, and will not receive security updates. Please upgrade asap.

- 해결: 
    npm install tar@6 -g


2. warning: adding embedded git repository // git add 잘못했을때, Clone 햇는데 add 가 안될때,

    : clone 하거나, git init 잘못한 곳에 폴더를 접속해
        "숨겨져있는 .git 파일을 지워주면 해결"


3.  [useRouter 사용하여, 값을 가져올때], useRouter 로 데이터 가져오는 것보다,return 이 더 빨리 일어나서, [데이터가 화면으로 불러와지지 않는 오류]

    import { useRouter } from "next/router";

        function DateFilter() {
        const eventdate = useRouter();
        
        let ms = [];
        for (const date of eventdate.query.date) {
            ms.push(<p>{date}</p>);
        }

        return (
            <div>
            <h1> DateFilter </h1>
            {ms}
            </div>
        );
        }
    export default DateFilter;

    ==>> 페이지를 로드할때, "eventdate.query" 이것보다 "return에 로드되는게 더 빨라서" eventdate.query 가 없다고나옴

            .map((date)=> ( <p> {date} </p> )) 해도 마찬가지


    - 해결 :
-      불러올때, [if 체크로, "값이 없으면, 넣을 리턴값"을 넣어주면된다.]

        ** 위의 식대로 굳이, 똑같이, 불러올 필요는 없지만, 그렇게 불러왔다는 가정 하에,

            import { useRouter } from "next/router";

            function DateFilter() {
            const eventdate = useRouter();
            
            let ms = [];
            for (const date of eventdate.query.date) {
                ms.push(<p>{date}</p>);
            }

-           if(!eventdate.query.date){
                return(
                    <div>
                        <p> You have no Date! </p>
                    </div>
            )
-           }

            return (
                <div>
                <h1> DateFilter </h1>
                {ms}
                </div>
            );
            }
        export default DateFilter;

        ==>>" 불러오는 동안, 값이 없으므로","잠깐동안 혹은 정말 없다면 계속 떠있을 코드"를 넣어준것이다.

4. "상대 경로로 지정하지 않아서" 이미지가 제대로 나오지 않는 현상 수정


    <event-LogisticsItem>

        return (
            <li className={styles.item}>
-               <img src={"/" + image} alt="imageName" className={styles.img} />
                <div>

            ...

-   ==> src 에, 경로 지정시, {"/" +...} 를 붙여서 "상대경로" 로 만들어 주어야 한다

5. npm run build 의 linting 오류로 인해, 배포파일이 만들어 지지 않는 오류

    <오류>
        C:\Users\audtl\OneDrive\8.REACT-Next\static-generation-app>npm run build

        > static-generation-app@0.1.0 build
        > next build

        info  - Linting and checking validity of types  

        > Build error occurred
        [Error: UNKNOWN: unknown error, readlink 'C:\Users\audtl\OneDrive\8.REACT-Next\static-generation-app\.next\server\middleware-manifest.json'] {
        errno: -4094,
        code: 'UNKNOWN',
        syscall: 'readlink',
        path: 'C:\\Users\\audtl\\OneDrive\\8.REACT-Next\\static-generation-app\\.next\\server\\middleware-manifest.json'
        }
        info  - Creating an optimized production build .

    <해결>
        1. 'C:\Users\audtl\OneDrive\8.REACT-Next\static-generation-app\.next\server\middleware-manifest.json'
            써져있는 이 경로 들어가서 세이브 한번 해주고 나옴 [prettier 사용중이므로]

        2. [1번 방법]이 안통한다?
            ".next 폴더 지우고", 
            다시 "npm run dev 한 후"에,
            "npm run build" 를 해준다


6. [ getStaticProps 사용시 오류] Error: getStaticPaths is required for dynamic SSG pages and is missing for '/[productid]' 

    < 설명 > 
        : getStaticPaths 를 사용하려면, 동적인 SSG pages 가 필요하다
            * SSG : Static site Generation

    < 오류 이유 >

-       1. "동적 페이지" [ ex) [xxx].js ... ] 는, "NEXT.JS의 기본 동작"으로 "사전 생성되지 않는다" => 사전 렌더링 하지 않는다

        2. 그 이유는, "동적 페이지"를 얼마나 많이 만들어야 하는지, 어떤 데이터가 어떤식으로 들어가는지, NEXT.JS 는 알 수 없기 때문에,
            "동적 페이지"는 "그때그때", "생성하는 것이다."

        ==>  "얼마나 생성되어야 하는지 모르는" "동적페이지" 라서, 그때그때, "상황에 맞춰 페이지를 생성"해야하는데,
            getStaticProps 로 인해서, "사전생성 해달라는 요청을 받은 것이다."

    < 해결 방법 >

        "Next.js" 가 "어떤 데이터를", "어느 정도의 양을" 만들어야 할 지 몰라서 "사전 생성을 하지 못하는 오류이므로"

        알려주면 된다. 그 양식을

-       "export async function getStaticPaths(){} 함수"를 통해서

    ==> [5].static-generation-DATA-FETCHING.txt [10~12번 참조]

7. [fetch 시 오류] error - SyntaxError: Unexpected token < in JSON at position 0 at JSON.parse (<anonymous>)

    : api 라던지, fetch 하는 주소 올바른지 확인

8. [fetch 시 오류] Unhandled Runtime Error, TypeError: Converting circular structure to JSON ...

    <전문>
        Unhandled Runtime Error
        TypeError: Converting circular structure to JSON
            --> starting at object with constructor 'HTMLInputElement'
            |     property '__reactFiber$8b3628nsgby' -> object with constructor 'FiberNode'
            --- property 'stateNode' closes the circle

    < 해결 >

       const "data = useRef()" 사용했는데, 그냥 "data" 를 써서 "API 로 보내려고 했음"

    < 오류코드 >

        function resistComment(){
            ...

            const emailRef = useRef();
            const nameRef = useRef();
            const commentRef = useRef();

            function resistComment(event) {
                event.preventDefault();

                const postData = {
-                   email: emailRef,
-                   name: nameRef,
-                   comment: commentRef,
                };

                fetch(`/api/comment/${eventId}`, {
                method: "POST",
                body: JSON.stringify(postData),
                headers: {
                    ...
                    
    < 해결된 코드 >

    function resistComment(){
        ...

        const emailRef = useRef();
        const nameRef = useRef();
        const commentRef = useRef();

        function resistComment(event) {
            event.preventDefault();

            const postData = {
-             email: emailRef.current.value,
-             name: nameRef.current.value,
-             comment: commentRef.current.value,
            };

            fetch(`/api/comment/${eventId}`, {
            method: "POST",
            body: JSON.stringify(postData),
            headers: {
                ...

9. [feth 에러] error - ./pages/api/contact-api.js
    Module parse failed: The top-level-await experiment is not enabled (set experiments.topLevelAwait: true to enabled it)
    File was processed with these loaders:
    * ./node_modules/next/dist/build/webpack/loaders/next-swc-loader.js
    You may need an additional loader to handle the result of these loaders.
    Error: The top-level-await experiment is not enabled (set experiments.topLevelAwait: true to enabled it)

    <해결>

        DB 연결문제이다.

        MONGODB 연결 코드 다시 확인하고
        혹시 helper function 을 쓰고있다면, 본문에 써보도록 하고,
        MONGODB id, password 잘 되어있는지 다시 확인

10. [fs 사용할때, fail to compile error ]fs, path 등 서버측 코드를 API가 아닌, PAGES 폴더안의 컴포넌트에서 사용할때 주의할점

    1. fs 나, fs를 사용하는 help 함수를 불러왔을때,
        "아예 사용하지 않거나", "서버측 코드(getStaticProps 등...)" 에 사용하지 않았다면

        이놈들이 어디쓸지 모른다고, 오류를 내기 때문에 저장하지 말아야한다!

    2. "만약 오류가 발생했다면, 서버를 다시 껐다 켜줘야한다."